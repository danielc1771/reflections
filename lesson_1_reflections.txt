How did viewing a diff between two versions of a file help you see the bug that was introduced?

Viewing the diff makes it easy to view side-by-side comparisons of the two files. It shows where the differences
between the two files are.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Having easy access to the history of a file makes it easier to undo changes or figure out where a specific
problem occurred.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git,
vs having versions automatically saved, like Google Docs does?

The pros are that you get to decide when to create a commit so, you could create a commit after each logical change.
The cons are that you could accidentally forget to make a commit and not be able to compare work to a previous version.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others,
like Google Docs, treat each file separately?

Git is more designed for working with projects and projects typically have more than 1 file. Google Docs on the other hand,
only considers that you'll be working on one file at a time.

How can you use the commands git log and git diff to view the history of files?

Git log shows all the commits on a repository and git diff shows the difference between 2 commits.

How might using version control make you more confident to make changes that could break something?

With version control, I don't have to worry about screwing something up because in case I do, I can just go back to an earlier
commit.

Now that you have your workspace set up, what do you want to try using Git for?

I'm going to start using Git for my C++ projects as well as any other projects I do.
